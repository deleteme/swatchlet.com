{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Swatches.svelte",
    "../src/Header.svelte",
    "../src/Picker.svelte",
    "../src/Swatch.svelte",
    "../src/ActionBar.svelte",
    "../src/Button.svelte",
    "../src/ButtonLink.svelte",
    "../src/Modal.svelte",
    "../src/PinnedRadios.svelte",
    "../src/PickerCanvas.svelte",
    "../src/PinnedCursor.svelte",
    "../src/PrimaryCursor.svelte"
  ],
  "sourcesContent": [
    "<script>\nimport Swatches from './Swatches.svelte';\nimport Header from './Header.svelte';\nimport Picker from './Picker.svelte';\nimport { picking, swatchesDimensionsIsReady } from './store.js';\nlet width = 0;\nlet height = 0;\n$: hasPicker = $picking !== null && $swatchesDimensionsIsReady;\n$: debuggingOutput = JSON.stringify({swatchesDimensionsIsReady: $swatchesDimensionsIsReady, $picking, hasPicker});\n</script>\n\n<style>\n.app {\n  font-family: \"SF Mono\", monospace;\n  height: 100%;\n  width: 100%;\n  position: relative;\n}\n#alive { display: none; }\n:global(body) { padding: 0; }\n</style>\n\n<div class=\"app\" bind:offsetWidth={width} bind:offsetHeight={height}>\n  <Header />\n  <Swatches />\n  {#if hasPicker}\n    <Picker width={width} height={height} />\n  {/if}\n  <span id='alive'>{debuggingOutput}</span>\n</div>\n",
    "<script>\n  import { swatches } from './store.js';\n  import Swatch from './Swatch.svelte';\n</script>\n\n<style>\n.swatches {\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 40px;\n}\n@media screen and (min-width: 0) and (max-width: 812px) {\n  .swatches {\n    flex-direction: column;\n  }\n}\n</style>\n\n<div class='swatches'>\n  {#each $swatches as swatch, i}\n  <Swatch value={swatch.value} i={i} />\n  {/each}\n</div>\n",
    "<script>\nimport AddNewColor from './AddNewColor.svelte';\n</script>\n\n<style>\nheader {\n  background: rgba(0, 0, 0, 0.6);\n  align-items: baseline;\n  display: flex;\n  height: 30px;\n  line-height: 30px;\n  justify-content: space-between;\n  padding: 5px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 1;\n}\n\nh1 {\n  color: white;\n  display: inline;\n  font-size: 14px;\n  margin: 0;\n  padding: 0;\n}\n\n</style>\n\n<header>\n  <h1>\n    swatchlet.com: share colors easily.\n  </h1>\n  <div>\n    <AddNewColor />\n  </div>\n</header>\n",
    "<script>\n  import { onDestroy } from 'svelte';\n  import ActionBar from './ActionBar.svelte';\n  import Button from './Button.svelte';\n  import ButtonLink from './ButtonLink.svelte';\n  import PickerCanvas from './PickerCanvas.svelte';\n  import { picking, swatches, cancelPicking, pickingSwatch, swatchesDimensions } from './store.js';\n  import { tracking } from './picker-canvas-store.js';\n  import PinnedRadios from './PinnedRadios.svelte';\n  import { getHighContrastColorFromHex } from './lib/get-high-contrast-color.js';\n  import isValidHex from './lib/is-valid-hex.js';\n  import Modal from './Modal.svelte';\n  import { renderHash } from './url-helpers.js';\n  import delay from './lib/delay.js';\n\n  $: backgroundColor = $swatches[$picking] && $swatches[$picking].value;\n  $: previousBackgroundColor = $swatches[$picking] ? $swatches[$picking].value : previousBackgroundColor;\n  $: background = previousBackgroundColor;\n  $: contrastingColor = getHighContrastColorFromHex(backgroundColor || previousBackgroundColor);\n  $: originElementDimensions = $swatchesDimensions[$picking]\n  $: previousOriginElementDimensions = originElementDimensions || previousOriginElementDimensions;\n\n  export let width = 0;\n  export let height = 0;\n  let value = $pickingSwatch.value;\n  let isOpen = true;\n  const timeScale = 1;\n  const duration1 = 200 * timeScale;\n  const duration2 = 150 * timeScale;\n  const effectOverlap = 50 * timeScale;\n\n  $: {\n    if (isValidHex(value) && $pickingSwatch) {\n      $swatches[$picking].value = value;\n    }\n  }\n\n  $: removeHref = renderHash({\n    swatches: $swatches.filter((s, j) => {\n      return $picking !== j;\n    })\n  });\n\n  let unsub = pickingSwatch.subscribe((swatch) => {\n    if (swatch && swatch.value !== value) {\n      value = swatch.value;\n    }\n  });\n  onDestroy(() => {\n    unsub();\n  });\n\n  const close = () => {\n    isOpen = false;\n    return delay(duration1 + duration2 - effectOverlap + 1);\n  };\n\n  const handleEscapeKey = () => {\n    close().then(cancelPicking);\n  };\n\n  const handleRemoveButton = e => {\n    e.preventDefault();\n    const href = e.target.href;\n    close().then(() => {\n      cancelPicking();\n      location.href = href;\n    });\n  };\n  const handleCloseButton = e => {\n    e.preventDefault();\n    close().then(cancelPicking);\n  };\n</script>\n\n<style>\n.picker {\n  height: 100%;\n  position: relative;\n  width: 100%;\n  transition: background 0.2s;\n  user-select: none;\n}\n.picker.tracking {\n  transition: none;\n}\n.picker :global(.actions) {\n  display: flex;\n  justify-content: flex-end;\n  right: 45px;\n  top: 50px;\n  width: 33%;\n  z-index: 1;\n}\ninput {\n  background: none;\n  border: 0;\n  border-radius: 0;\n  font-size: 4vh;\n  font-weight: bold;\n  left: 45px;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  top: 45px;\n  width: 6em;\n}\n\ninput:hover, input:focus {\n  border-bottom: 3px solid;\n}\n@media screen and (min-width: 0) and (max-width: 812px) {\n  input {\n    left: 30px;\n  }\n  .picker :global(.actions) {\n    right: 30px;\n    top: 43px;\n  }\n}\n</style>\n\n\n<svelte:head>\n{@html `<style>html { background: ${backgroundColor || previousBackgroundColor} }</style>`}\n</svelte:head>\n{#if isOpen }\n<Modal\n  targetWidth={width}\n  targetHeight={height}\n  dimensions={previousOriginElementDimensions}\n  background={background}\n  duration1={duration1}\n  duration2={duration2}\n  effectOverlap={effectOverlap}\n  handleEscapeKey={handleEscapeKey}\n>\n  <div\n    class=\"picker\"\n    class:tracking={$tracking}\n    style='background: {backgroundColor || previousBackgroundColor}; color: {contrastingColor};'\n  >\n    <input\n      type=\"text\"\n      bind:value={value}\n      style='color: {contrastingColor}; border-color: {contrastingColor};'\n    />\n    <ActionBar>\n      <ButtonLink href={removeHref} class='swatch-action' on:click={handleRemoveButton}>\n        Remove\n      </ButtonLink>\n      <Button on:click={handleCloseButton}>Close</Button>\n    </ActionBar>\n    <PinnedRadios />\n    <PickerCanvas />\n  </div>\n</Modal>\n{/if}\n",
    "<script>\n  import { onMount, onDestroy } from 'svelte';\n  import { renderHash } from './url-helpers.js';\n  import { isMobile } from './breakpoint-store.js';\n  import ButtonLink from './ButtonLink.svelte';\n  import Button from './Button.svelte';\n  import ActionBar from './ActionBar.svelte';\n  import { pick, swatches, picking, swatchesDimensions } from './store.js';\n  import { getHighContrastColorFromHex } from './lib/get-high-contrast-color.js';\n  export let i;\n  export let value;\n  let isHovering = false;\n  const noop = () => {};\n  const safe = (fn, fallback) => {\n    try {\n      const v = fn();\n      return v;\n    } catch (e) {\n      return fallback;\n    }\n  };\n  $: removeHref = renderHash({\n    swatches: $swatches.filter((s, j) => {\n      return i !== j;\n    })\n  });\n  $: contrastingColor = safe(() => getHighContrastColorFromHex(value), '#000');\n  $: outerBackgroundColor = isHovering ? '' : `background-color: ${value}`;\n  $: valueFontSize = $isMobile ? '10vw' : `calc(100vw / ${$swatches.length} * 0.2)`;\n\n  let element;\n\n  const measure = () => {\n    let { offsetWidth, offsetHeight, offsetLeft, offsetTop } = element;\n    let parentElement = element.parentElement;\n    while (parentElement) {\n      offsetLeft += parentElement.offsetLeft;\n      offsetTop += parentElement.offsetTop;\n      parentElement = parentElement.parentElement;\n    }\n    return { offsetWidth, offsetHeight, offsetLeft, offsetTop };\n  };\n\n  const isAnchor = e => e.target.tagName === 'A';\n  const measureDimensions = () => {\n    $swatchesDimensions = {\n      ...$swatchesDimensions,\n      [i]: measure()\n    };\n  };\n  const handleWindowResize = () => { measureDimensions(); };\n  onMount(measureDimensions);\n  onDestroy(() => {\n    $swatchesDimensions = { ...$swatchesDimensions, [i]: null }\n  });\n\n</script>\n\n<style>\n.swatch {\n  box-sizing: border-box;\n  display: inline-flex;\n  height: 100%;\n  margin: auto;\n  position: relative;\n  width: 100%;\n  border-radius: 3px;\n  user-select: none;\n}\n\n.swatch.swatch-is-hovering:hover {\n  background-color: white;\n}\n\n.swatch:hover :global(.actions) {\n  display: flex;\n  justify-content: flex-end;\n}\n\n:global(.swatch-action) {\n  margin-right: 5px;\n}\n\n.swatch-inner {\n  --gap: 0px;\n  border-radius: 0px;\n  bottom: var(--gap);\n  display: flex;\n  align-items: center;\n  height: calc(100% - var(--gap) * 2);\n  left: var(--gap);\n  justify-content: center;\n  right: var(--gap);\n  top: var(--gap);\n  transition: background 0.5s;\n  width: calc(100% - var(--gap) * 2);\n}\n\n.value {\n  cursor: default;\n  font-weight: bold;\n  margin: 0;\n  padding: 0;\n  position: relative;\n  text-align: center;\n  width: 100%;\n}\n</style>\n\n<window on:resize={handleWindowResize} />\n<div\n  class=\"swatch\" class:swatch-is-hovering={isHovering}\n  style='{outerBackgroundColor}; color: {contrastingColor};'\n  on:click={(e) => { if (!isAnchor(e)) { pick(i) }}}\n  bind:this={element}\n>\n  <div\n    class=\"swatch-inner\"\n    style=\"background-color: {value};\"\n  >\n    <span\n      class=\"value\"\n      style='font-size: {valueFontSize}; color: { contrastingColor }'\n    >{value}</span>\n    {#if !$isMobile}\n      <ActionBar>\n        <ButtonLink href={removeHref} class='swatch-action'>\n          Remove\n        </ButtonLink>\n      </ActionBar>\n    {/if}\n  </div>\n</div>\n",
    "<style>\n.actions {\n  align-items: center;\n  display: none;\n  flex-direction: row;\n  position: absolute;\n  right: 5px;\n  top: 20px;\n  width: calc(100% - 5px * 2);\n}\n</style>\n\n<div class=\"actions\">\n  <slot></slot>\n</div>\n\n",
    "<script>\n  export let type = 'button';\n  let klass = '';\n  export { klass as class };\n</script>\n<style>\n  button {\n    align-items: center;\n    align-self: center;\n    background: rgba(0, 0, 0, 0.6);\n    border: 0;\n    border-radius: 15px;\n    color: white;\n    cursor: pointer;\n    display: flex;\n    font-weight: bold;\n    margin-bottom: 0;\n    line-height: 30px;\n    padding: 0 1em;\n  }\n  button:hover {\n    background: black;\n  }\n  button:active {\n    transform: translateY(1px);\n  }\n  button:focus {\n    outline: white;\n  }\n</style>\n\n<button\n  {type}\n  class={klass}\n  on:click\n>\n  <slot></slot>\n</button>\n",
    "<script>\n  export let href = '';\n  let klass = '';\n  export { klass as class };\n</script>\n<style>\n  a {\n    align-items: center;\n    align-self: center;\n    background: rgba(0, 0, 0, 0.6);\n    border: 0;\n    border-radius: 15px;\n    color: white;\n    cursor: pointer;\n    display: flex;\n    font-weight: bold;\n    line-height: 30px;\n    padding: 0px 1em;\n  }\n  a:hover {\n    background: black;\n    text-decoration: none;\n  }\n  a:active {\n    transform: translateY(1px);\n  }\n  a:focus {\n    outline: white;\n  }\n</style>\n\n<a\n  {href}\n  class={klass}\n  on:click\n>\n  <slot></slot>\n</a>\n",
    "<script>\n  import { fly, fade } from 'svelte/transition';\n  import * as easing from 'svelte/easing';\n  export let targetHeight = 0;\n  export let targetWidth = 0;\n  export let background = '';\n  export let dimensions;\n  export let duration1 = 2000;\n  export let duration2 = 1500;\n  export let effectOverlap = 0;\n  export let handleEscapeKey;\n\n  const handleKeyUp = e => {\n    if (e.code === 'Escape') handleEscapeKey();\n  }\n  //$: cachedDimensions = dimensions ? dimensions : cachedDimensions;\n\n  $: transitionSwatchScale = dimensions ? {\n      position: {\n        start: { x: dimensions.offsetLeft, y: dimensions.offsetTop },\n        end: { x: 0, y: 0 },\n      },\n      scale: {\n        start: {\n          x: dimensions.offsetWidth / targetWidth,\n          y: dimensions.offsetHeight / targetHeight\n        },\n        end: { x: 1, y: 1 },\n      }} : null;\n\n  function renderTransformStyles (s, p) {\n    const styles = `\n      transform: scale(${s.x}, ${s.y}) translate(${p.x}px, ${p.y}px);\n      `.trim();\n    return styles;\n  }\n\n  function swatchScale(node, { duration, scale, position, reverse }) {\n    console.log('swatchScale called', { duration, scale, position, reverse });\n    const css = t => {\n      console.log('t', t);\n      //if (reverse) t = 100 - t;\n      t = easing.cubicOut(t);\n      const s = {\n        x: scale.start.x + (Math.abs(scale.start.x - scale.end.x) * t),\n        y: scale.start.y + (Math.abs(scale.start.y - scale.end.y) * t)\n      };\n      const p = {\n        x: Math.abs((position.end.x - position.start.x) * (1 - t)) / s.x,\n        y: Math.abs((position.end.y - position.start.y) * (1 - t)) / s.y\n      };\n      return `${renderTransformStyles(s, p)};`;\n    };\n    return { duration, css };\n  }\n  function swatchScaleOut(node, options) {\n    console.log('swatch scale out called');\n    return swatchScale(node, { ...options, reverse: true });\n  }\n\n  $: overlayStyle = [\n      `width:  ${targetWidth}px`,\n      `height: ${targetHeight}px`,\n      `background: ${background}`\n    ].join('; ')\n</script>\n<style>\n.modal {\n  height: 100%;\n  position: relative;\n  width: 100%;\n  z-index: 1;\n}\n.overlay {\n  left: 0;\n  top: 0;\n  position: absolute;\n  transform-origin: 0px 0px;\n  z-index: 1;\n}\n\n.overlay-overflow {\n  height: 100%;\n  overflow: hidden;\n  position: absolute;\n  width: 100%;\n  z-index: 1;\n}\n</style>\n<svelte:window on:keyup={handleKeyUp}></svelte:window>\n<!--\n    transition:fade\n    transition:swatchScale=\"{{ ...transitionSwatchScale, duration: 2000 }}\"\n    in:swatchScale=\"{{ ...transitionSwatchScale, duration: 2000 }}\"\n    out:swatchScaleOut|local=\"{{ ...transitionSwatchScale, delay: 1500, duration: 2000 }}\"\n-->\n<div class=\"overlay-overflow\">\n  <div\n    style=\"{ overlayStyle }\"\n    class=\"overlay\"\n    in:swatchScale=\"{{ ...transitionSwatchScale, duration: duration1 }}\"\n    out:swatchScaleOut=\"{{ ...transitionSwatchScale, delay: duration2 - effectOverlap, duration: duration1 }}\"\n  >\n  </div>\n  <div\n    class=\"modal\"\n    in:fly=\"{{ delay: duration1 - effectOverlap, duration: duration2, x: targetWidth / 10, y: 0, opacity: 0, easing: easing.quintOut }}\"\n    out:fly=\"{{ delay: 0, duration: duration2, x: targetWidth / 10, y: 0, opacity: 0, easing: easing.quintOut }}\"\n  >\n    <slot></slot>\n  </div>\n</div>\n",
    "<script>\n  import { pinned } from './picker-canvas-store.js';\n  import { pickingSwatchRgb } from './store.js';\n</script>\n\n<style>\nlabel {\n  font-weight: bold;\n}\n@media screen and (min-width: 813px) {\n  div {\n    --golden-ratio: 1.618;\n    --side: calc((1 / var(--golden-ratio)) * 100%);\n    --margin: calc((100% - var(--side)) / 2);\n    box-sizing: border-box;\n    left: calc(var(--side) + var(--margin));\n    line-height: 4rem;\n    padding: 1rem;\n    position: absolute;\n    width: var(--margin);\n    top: var(--margin);\n  }\n}\n@media screen and (min-width: 0) and (max-width: 812px) {\n  div {\n    left: 30px;\n    position: absolute;\n    top: 120px;\n  }\n  label {\n    align-items: center;\n    display: inline-flex;\n    padding-right: 1rem;\n  }\n  input {\n    margin-bottom: 0;\n    margin-right: 0.5rem;\n  }\n  label * {\n    align-self: center;\n  }\n}\n</style>\n\n{#if $pickingSwatchRgb}\n<div>\n  <label>\n    <input type=radio bind:group={$pinned} value='R'>\n    R: { $pickingSwatchRgb.R }\n  </label>\n\n  <label>\n    <input type=radio bind:group={$pinned} value='G'>\n    G: { $pickingSwatchRgb.G }\n  </label>\n\n  <label>\n    <input type=radio bind:group={$pinned} value='B'>\n    B: { $pickingSwatchRgb.B }\n  </label>\n</div>\n{/if}\n",
    "<script>\nimport { onMount, onDestroy } from \"svelte\";\nimport { derived } from \"svelte/store\";\nimport {\n  canvasState,\n  COLOR_MODEL_RGB,\n  RANGES,\n  pinned,\n  colorModel,\n  width,\n  height,\n  tracking\n} from \"./picker-canvas-store.js\";\nimport rgbToHex from \"./lib/rgb-to-hex.js\";\nimport { picking, swatches, pickingSwatchRgb } from \"./store\";\nimport PrimaryCursor from \"./PrimaryCursor.svelte\";\nimport PinnedCursor from \"./PinnedCursor.svelte\";\nimport trap from './lib/trap.js';\n\nlet mounted;\nlet elements, contexts;\nlet cursorLeft = -1,\n  cursorTop = -1;\nlet pinnedCursorLeft = -1,\n  pinnedCursorTop = -1,\n  pinnedCursorWidth = 10;\n\nconst rgb = { R: 0, G: 0, B: 0 };\nconst primaryVsPinnedThreshold = 0.65;\n\nconst getAxisFromPinned = () => {\n  const [xAxis, yAxis] = $colorModel.replace($pinned, \"\");\n  return [xAxis, yAxis];\n};\n\nconst getImageDataDimensions = () => {\n  const [xAxis, yAxis] = getAxisFromPinned();\n  const [, width] = RANGES[xAxis];\n  const [, height] = RANGES[yAxis];\n  return [width, height];\n};\n\nconst getPinnedImageDataDimensions = () => {\n  const width = 1;\n  const height = RANGES[$pinned][1];\n  return [width, height];\n};\n\nconst getBuffers = (w, h) => {\n  const buf = new ArrayBuffer(h * w * 4); //imageData.data.length);\n  const buf8 = new Uint8ClampedArray(buf);\n  const data = new Uint32Array(buf);\n  return [buf, buf8, data];\n};\n\nconst renderCanvasSize = () => {\n  elements.mounted.width = $width;\n  elements.mounted.height = $height;\n};\n\nconst renderPrimaryCanvasSize = () => {\n  if ($colorModel === COLOR_MODEL_RGB) {\n    const max = RANGES.R[1]; // 255\n    elements.primary.width = max;\n    elements.primary.height = max;\n  }\n};\n\nconst renderPinnedCanvasSize = () => {\n  if ($colorModel === COLOR_MODEL_RGB) {\n    const max = RANGES[$pinned][1]; // 255\n    elements.pinned.width = 1;\n    elements.pinned.height = max;\n  }\n};\n\nconst render = state => {\n  if (!elements || !contexts || !state.width || !state.height || !state.pickingSwatchRgb) return;\n  const swatchRgb = state.pickingSwatchRgb;\n  renderCanvasSize();\n  renderPrimaryCanvasSize();\n  renderPinnedCanvasSize();\n\n  const a = 255;\n  (function renderPrimaryCanvas() {\n    var x = 0;\n    var y = 0;\n    var index = 0;\n    const [imageDataWidth, imageDataHeight] = getImageDataDimensions();\n    const imageData = contexts.primary.createImageData(\n      imageDataWidth,\n      imageDataHeight\n    );\n    const [xAxis, yAxis] = getAxisFromPinned();\n    const primaryWidth = RANGES[xAxis][1]; // 255\n    const primaryHeight = RANGES[yAxis][1]; // 255\n    const xScale = state.width / primaryWidth;\n    const yScale = state.height / primaryHeight;\n\n    const [buf, buf8, data] = getBuffers(imageDataWidth, imageDataHeight);\n\n    const pinnedValue = swatchRgb[state.pinned];\n    rgb[state.pinned] = pinnedValue;\n    while (y < imageDataHeight) {\n      let yAxisValue = y;\n      rgb[yAxis] = yAxisValue;\n      while (x < imageDataWidth) {\n        let xAxisValue = x;\n\n        rgb[xAxis] = xAxisValue;\n\n        // is little endian\n        data[index] =\n          (a << 24) | // alpha\n          (rgb.B << 16) | // blue\n          (rgb.G << 8) | // green\n          rgb.R;\n\n        // is not little endian\n        //data[y * imageDataWidth + x] =\n        //(rgb.R << 24) | // red\n        //(rgb.G << 16) | // green\n        //(rgb.B << 8) | // blue\n        //a;\n\n        x += 1;\n        index += 1;\n      }\n      x = 0;\n      y += 1;\n    }\n\n    imageData.data.set(buf8);\n    contexts.primary.putImageData(imageData, 0, 0);\n    contexts.mounted.drawImage(\n      elements.primary,\n      0,\n      0,\n      Math.floor(primaryWidth * xScale * primaryVsPinnedThreshold),\n      Math.floor(primaryHeight * yScale)\n    );\n\n    cursorLeft = Math.floor(\n      swatchRgb[xAxis] * xScale * primaryVsPinnedThreshold\n    );\n    cursorTop = Math.floor(swatchRgb[yAxis] * yScale);\n  })();\n\n  (function renderPinnedCanvas() {\n    var y = 0;\n    const [pinnedWidth, pinnedHeight] = getPinnedImageDataDimensions();\n    const imageData = contexts.pinned.createImageData(\n      pinnedWidth,\n      pinnedHeight\n    );\n\n    const yScale = state.height / pinnedHeight;\n    const [buf, buf8, data] = getBuffers(pinnedWidth, pinnedHeight);\n    // create a gradient from one to 255\n    const others = COLOR_MODEL_RGB.replace(state.pinned, \"\").split(\"\");\n    // others will be something like ['R', 'G']\n    rgb[others[0]] = swatchRgb[others[0]];\n    rgb[others[1]] = swatchRgb[others[1]];\n    while (y < pinnedHeight) {\n      rgb[state.pinned] = pinnedHeight - y;\n      data[y] =\n        (a << 24) | // alpha\n        (rgb.B << 16) | // blue\n        (rgb.G << 8) | // green\n        rgb.R;\n      y += 1;\n    }\n\n    imageData.data.set(buf8);\n    contexts.pinned.putImageData(imageData, 0, 0);\n    contexts.mounted.drawImage(\n      elements.pinned,\n      Math.floor($width * primaryVsPinnedThreshold),\n      0,\n      Math.ceil($width * (1 - primaryVsPinnedThreshold)),\n      Math.floor(pinnedHeight * yScale)\n    );\n\n    pinnedCursorLeft = Math.floor($width * primaryVsPinnedThreshold);\n    pinnedCursorWidth = Math.ceil($width * (1 - primaryVsPinnedThreshold));\n    pinnedCursorTop = (RANGES[$pinned][1] - swatchRgb[$pinned]) * yScale;\n  })();\n};\n\nlet unsubscribe;\n\nonMount(() => {\n  elements = {\n    mounted,\n    primary: document.createElement(\"canvas\"),\n    pinned: document.createElement(\"canvas\")\n  };\n  contexts = {\n    mounted: elements.mounted.getContext(\"2d\"),\n    primary: elements.primary.getContext(\"2d\"),\n    pinned: elements.pinned.getContext(\"2d\")\n  };\n\n  const canvasStateWithSwatch = derived(\n    [canvasState, pickingSwatchRgb],\n    ([canvasState, pickingSwatchRgb]) => {\n      return { ...canvasState, pickingSwatchRgb };\n    }\n  );\n  unsubscribe = canvasStateWithSwatch.subscribe(render);\n});\n\nonDestroy(() => {\n  unsubscribe();\n  elements = null;\n  contexts = null;\n});\n\nconst getIsPrimaryCanvasEvent = e => {\n  return e.layerX < $width * primaryVsPinnedThreshold;\n};\n\nconst handleCanvasSwatchEvent = (e, { isPrimaryCanvas }) => {\n  const _rgb = { ...$pickingSwatchRgb };\n  // translate a click into an rgb value\n  if (isPrimaryCanvas) {\n    const [xAxis, yAxis] = getAxisFromPinned();\n    let primaryXMax = RANGES[xAxis][1]; // 255\n    let primaryYMax = RANGES[yAxis][1]; // 255\n    let primaryPxWidth = $width * primaryVsPinnedThreshold;\n    let primaryPxHeight = $height;\n    // how far along into the primary canvas?\n    let xTargetRatio = trap(e.layerX / primaryPxWidth); // 0.3\n    let xTargetComponentValue = Math.round(xTargetRatio * primaryXMax);\n    _rgb[xAxis] = xTargetComponentValue;\n    let yTargetRatio = trap(e.layerY / primaryPxHeight); // 0.4\n    let yTargetComponentValue = Math.round(yTargetRatio * primaryYMax);\n    _rgb[yAxis] = yTargetComponentValue;\n  } else {\n    // it's pinned canvas\n    let pinnedPxHeight = $height;\n    let pinnedYMax = RANGES[$pinned][1]; // 255\n    let yTargetRatio = trap(e.layerY / pinnedPxHeight); // 0.4\n    let yTargetComponentValue =\n      pinnedYMax - Math.round(yTargetRatio * pinnedYMax);\n    _rgb[$pinned] = yTargetComponentValue;\n  }\n  $swatches = $swatches.map((swatch, i) => {\n    if (i === $picking) {\n      return { ...swatch, value: rgbToHex(_rgb.R, _rgb.G, _rgb.B) }\n    } else {\n      return swatch;\n    }\n  });\n}\n\nconst handleCanvasClick = e => {\n  const isPrimaryCanvas = getIsPrimaryCanvasEvent(e);\n  handleCanvasSwatchEvent(e, { isPrimaryCanvas });\n};\n\nconst handleMouseMove = e => {\n  if ($tracking) {\n    handleCanvasSwatchEvent(e, $tracking);\n  }\n};\n\nconst handleMouseDown = (e) => {\n  const isPrimaryCanvas = getIsPrimaryCanvasEvent(e);\n  $tracking = { isPrimaryCanvas };\n};\n\nconst handleMouseUp = e => {\n  if ($tracking) {\n    const _tracking = { ...$tracking };\n    $tracking = null;\n    handleCanvasSwatchEvent(e, _tracking);\n  }\n};\n\nconst handleWindowResize = () => {\n  if (mounted) {\n    $width = mounted.clientWidth;\n    $height = mounted.clientHeight;\n  }\n};\n</script>\n\n<style>\n@media screen and (min-width: 813px) {\n  .picker-canvas {\n    --golden-ratio: 1.618;\n    --side: calc((1 / var(--golden-ratio)) * 100%);\n    --margin: calc((100% - var(--side)) / 2);\n    bottom: var(--margin);\n    height: var(--side);\n    left: var(--margin);\n    right: var(--margin);\n    position: absolute;\n    top: var(--margin);\n    width: var(--side);\n  }\n}\n@media screen and (min-width: 0) and (max-width: 812px) {\n  .picker-canvas {\n    bottom: 30px;\n    left: 30px;\n    right: 30px;\n    position: absolute;\n    top: 33%;\n  }\n}\ncanvas {\n  bottom: 0;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n}\n</style>\n\n<svelte:window on:resize={handleWindowResize} />\n<div class=\"picker-canvas\">\n  <canvas\n    bind:this={mounted}\n    bind:clientWidth={$width}\n    bind:clientHeight={$height}\n    on:mousedown={handleMouseDown}\n    on:mouseup={handleMouseUp}\n    on:mousemove={handleMouseMove}\n    on:touchstart={handleMouseDown}\n    on:touchend={handleMouseUp}\n    on:touchcancel={handleMouseUp}\n    on:touchmove|preventDefault={handleMouseMove}\n  >\n  </canvas>\n  {#if cursorLeft >= 0 && cursorTop >= 0}\n    <PrimaryCursor left={cursorLeft} top={cursorTop} />\n  {/if}\n  {#if pinnedCursorLeft >= 0 && pinnedCursorTop >= 0}\n    <PinnedCursor left={pinnedCursorLeft} top={pinnedCursorTop} width={pinnedCursorWidth} />\n  {/if}\n</div>\n",
    "<script>\n  import { spring } from 'svelte/motion';\n\n  const initialLeft = -1;\n  const initialTop = -1;\n  let transform = '';\n  export let left = initialLeft;\n  export let top = initialTop;\n  export let width = 10;\n  const coords = spring({ left: left, top: top }, {\n    stiffness: 0.2,\n    damping: 0.8\n  });\n  $: isUsingDefaults = left === initialLeft || top === initialTop;\n  $: isSettled = $coords.left === left && $coords.top === top;\n  $: initialized = !isUsingDefaults;\n\n  $: {\n    if (!isUsingDefaults) {\n      if (!isSettled) {\n        coords.set({ left: left, top: top });\n      }\n      transform = `transform: translateX(${$coords.left}px) translateY(${$coords.top}px);`;\n    }\n  }\n</script>\n<style>\n.pinned-cursor {\n  background: none;\n  border: 3px solid white;\n  border-radius: 3px;\n  box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.7);\n  box-sizing: border-box;\n  display: none;\n  height: 7px;\n  left: -3px;\n  position: absolute;\n  pointer-events: none;\n  top: -3px;\n}\n.initialized {\n  display: block;\n}\n</style>\n\n<div\n  class=\"pinned-cursor\"\n  class:initialized={initialized}\n  style=\"{transform} width: {width + (3 * 2)}px;\"\n></div>\n",
    "<script>\n  import { spring } from 'svelte/motion';\n\n  const initialLeft = -1;\n  const initialTop = -1;\n  let transform = '';\n  export let left = initialLeft;\n  export let top = initialTop;\n  const coords = spring({ left: left, top: top }, {\n    stiffness: 0.2,\n    damping: 0.8\n  });\n  $: isUsingDefaults = left === initialLeft || top === initialTop;\n  $: isSettled = $coords.left === left && $coords.top === top;\n  $: initialized = !isUsingDefaults;\n\n  $: {\n    if (!isUsingDefaults) {\n      if (!isSettled) {\n        coords.set({ left: left, top: top });\n      }\n      transform = `transform: translateX(${$coords.left}px) translateY(${$coords.top}px);`;\n    }\n  }\n</script>\n<style>\n.cursor {\n  --size: 45px;\n  --offset: calc((var(--size) - 1px) / -2);\n  background: none;\n  border: 3px solid white;\n  border-radius: 3px;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.7);\n  box-sizing: border-box;\n  height: var(--size);\n  position: absolute;\n  width: var(--size);\n  pointer-events: none;\n  left: var(--offset);\n  top: var(--offset);\n}\n</style>\n<div class=\"cursor\" style=\"{transform}\"></div>\n"
  ],
  "names": [],
  "mappings": "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"
}